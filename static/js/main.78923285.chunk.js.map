{"version":3,"sources":["components/DataTable.js","App.js","reportWebVitals.js","index.js"],"names":["DataTable","useState","services","setServices","total","useEffect","loadServices","addTotal","subservice","parseInt","service_selected","price","a","axios","get","result","data","purchased_services","className","class","scope","colSpan","map","service","index","name","purchased_office_template","purchased_office_services","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAyFeA,MArFf,WAAsB,IAAD,EACYC,mBAAS,IADrB,mBACbC,EADa,KACHC,EADG,KAGhBC,EAAQ,EAEZC,qBAAU,WACTC,MACE,IAEH,IAAMC,EAAW,SAACC,GACjBJ,GAAgBK,SAASD,EAAWE,iBAAiBC,MAAO,KAGvDL,EAAY,uCAAG,4BAAAM,EAAA,sEACCC,IAAMC,IAAN,uBADD,OACdC,EADc,OAGpBZ,EAAYY,EAAOC,KAAKA,KAAKC,oBAHT,2CAAH,qDAMlB,OACC,sBAAKC,UAAU,WAAf,UACC,oDAEA,wBAAOC,MAAM,sBAAb,UACC,uBAAOA,MAAM,aAAb,SACC,+BACC,oBAAIC,MAAM,MAAV,2BACA,oBAAIC,QAAQ,IAAZ,+BAGF,kCACEnB,EAASoB,KAAI,SAACC,EAASC,GAAV,OACb,+BACC,6BAAKD,EAAQE,OACZF,EAAQG,0BAA0BC,0BAA0BL,KAC5D,SAACd,EAAYgB,GAAb,OACC,6BACkC,OAAhChB,EAAWE,iBACX,qCACEF,EAAWiB,KACXlB,EAASC,MAGX,gBAON,oBAAIa,QAAQ,IAAZ,SACC,uCAAUjB,aAKb,qDACA,wBAAOe,MAAM,sBAAb,UACC,uBAAOA,MAAM,aAAb,SACC,+BACC,oBAAIC,MAAM,MAAV,2BACA,oBAAIC,QAAQ,IAAZ,+BAGF,gCACEnB,EAASoB,KAAI,SAACC,EAASC,GAAV,OACb,+BACC,6BAAKD,EAAQE,OACZF,EAAQG,0BAA0BC,0BAA0BL,KAC5D,SAACd,EAAYgB,GAAb,OACC,6BACkC,OAAhChB,EAAWE,iBACTF,EAAWiB,KACX,yB,MCjEEG,MARf,WACC,OACC,qBAAKV,UAAU,MAAf,SACC,cAAC,EAAD,OCKYW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78923285.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./css/DataTable.css\";\r\n\r\nfunction DataTable() {\r\n\tconst [services, setServices] = useState([]);\r\n\r\n\tlet total = 0;\r\n\r\n\tuseEffect(() => {\r\n\t\tloadServices();\r\n\t}, []);\r\n\r\n\tconst addTotal = (subservice) => {\r\n\t\ttotal = total + parseInt(subservice.service_selected.price, 10);\r\n\t};\r\n\r\n\tconst loadServices = async () => {\r\n\t\tconst result = await axios.get(`/practical-api.json`);\r\n\r\n\t\tsetServices(result.data.data.purchased_services);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"homemain\">\r\n\t\t\t<h1>Purchased Services</h1>\r\n\r\n\t\t\t<table class=\"table border shadow\">\r\n\t\t\t\t<thead class=\"thead-dark\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th scope=\"col\">Main Services</th>\r\n\t\t\t\t\t\t<th colSpan=\"3\">Sub Services</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{services.map((service, index) => (\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>{service.name}</td>\r\n\t\t\t\t\t\t\t{service.purchased_office_template.purchased_office_services.map(\r\n\t\t\t\t\t\t\t\t(subservice, index) => (\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{subservice.service_selected !== null || undefined ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{subservice.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{addTotal(subservice)}\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\"--\"\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<td colSpan=\"4\">\r\n\t\t\t\t\t\t<b>Total={total}</b>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\r\n\t\t\t<h1>Additional Services</h1>\r\n\t\t\t<table class=\"table border shadow\">\r\n\t\t\t\t<thead class=\"thead-dark\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th scope=\"col\">Main Services</th>\r\n\t\t\t\t\t\t<th colSpan=\"3\">Sub Services</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{services.map((service, index) => (\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>{service.name}</td>\r\n\t\t\t\t\t\t\t{service.purchased_office_template.purchased_office_services.map(\r\n\t\t\t\t\t\t\t\t(subservice, index) => (\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{subservice.service_selected === null || undefined\r\n\t\t\t\t\t\t\t\t\t\t\t? subservice.name\r\n\t\t\t\t\t\t\t\t\t\t\t: \"--\"}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DataTable;\r\n","import \"./App.css\";\nimport DataTable from \"./components/DataTable\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<DataTable />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}